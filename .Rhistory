max_date=max(date_egg_proper))
# NUMBER OF OBSERVATIONS - my addition ----
# how many times was each penguin measured, and across what total time period?
penguins %>%
group_by(individual_id) %>%
summarise(first_observation=min(date_egg_proper),
last_observation=max(date_egg_proper),
study_duration_years = (last_observation-first_observation)/lubridate::dyears(1),
n=n()) %>%
arrange(desc(study_duration_years))
# Factors ----
penguins <- penguins %>%
mutate(flipper_range =case_when(flipper_length_mm <= 190 ~ "small",
flipper_length_mm >190 & flipper_length_mm < 213 ~ "medium",
flipper_length_mm >= 213 ~ "large"))
# making a bar plot to visualise previous code chunk
penguins %>%
ggplot(aes(x = flipper_range))+
geom_bar(aes(fill = "black"))
# convert the column flipper_range from class character to class factor.
penguins <- penguins %>%
mutate(flipper_range = fct_relevel(flipper_range, "small", "medium", "large"))
# plot
penguins %>%
ggplot(aes(x = flipper_range))+
geom_bar(aes(fill = "black"))
# Automated data exploration with skim()
library(skimr)
skimr::skim(penguins) # data quality check
# _____________________________________________________________----
# for the purpose of submission, normally data visualisation script is 02_visualisation_penguins.R and in order to fetch cleaning script would normally run this.
source("scripts/01_import_penguins_data.R")
# DATA VISULISATION - MY FAVORITE TOPIC ----
# Building a ggplot step by step ----
## Render a plot background ----
penguins %>%
ggplot() # produce an empty grey panel
ggplot(data = penguins) # produce an empty grey panel
## Set axes ----
penguins %>%
ggplot(aes(x=flipper_length_mm,
y = body_mass_g))
## Add a geom ----
penguins %>%
ggplot(aes(x=flipper_length_mm,
y = body_mass_g))+
layer(                # layer inherits data and aesthetic arguments from previous
geom="point",       # draw point objects
stat="identity",    # each individual data point gets a geom (no summaries)
position=position_identity()) # data points are not moved in any way e.g. we could specify jitter or dodge if we want to avoid busy overlapping data
# simple version
penguins %>%
ggplot(aes(x=flipper_length_mm,
y = body_mass_g))+
geom_point(colour="red")
penguins %>%
ggplot(aes(x=flipper_length_mm,
y = body_mass_g))+
geom_point(aes(colour=species))
## Add a second geom ----
penguins %>%
ggplot(aes(x=flipper_length_mm,
y = body_mass_g))+
geom_point(aes(colour=species))+
geom_smooth(method="lm",    #add another layer of data representation.
se=FALSE,
aes(colour=species)) # note layers inherit information from the top ggplot() function but not previous layers - if we want separate lines per species we need to either specify this again *or* move the color aesthetic to the top layer.
# simplified version of above
penguins %>%
ggplot(aes(x=flipper_length_mm,
y = body_mass_g,
colour=species))+ ### now colour is set here it will be inherited by ALL layers
geom_point() +
geom_smooth(method="lm",    #add another layer of data representation.
se=FALSE)
## Set axis limits ----
penguins %>%
ggplot(aes(x=flipper_length_mm,
y = body_mass_g,
colour=species))+
geom_point()+
geom_smooth(method="lm",
se=FALSE)+
xlim(0,240) + ylim(0,7000)
penguins %>%
ggplot(aes(x=flipper_length_mm,
y = body_mass_g,
colour=species))+
geom_point()+
geom_smooth(method="lm",
se=FALSE)+
xlim(0,240) + ylim(0,7000)+
coord_flip()
## Custom labels ----
penguins %>%
ggplot(aes(x=flipper_length_mm,
y = body_mass_g,
colour=species))+
geom_point()+
geom_smooth(method="lm",
se=FALSE)+
labs(x = "Flipper length (mm)", # x.axis title
y = "Body mass (g)", # y.axis title
title= "Penguin Size, Palmer Station LTER", # title
subtitle= "Flipper length and body mass for three penguin species") # subtitle
## Custom themes ----
penguins %>%
ggplot(aes(x=flipper_length_mm,
y = body_mass_g,
colour=species))+
geom_point()+
geom_smooth(method="lm",
se=FALSE)+
labs(x = "Flipper length (mm)",
y = "Body mass (g)",
title= "Penguin Size, Palmer Station LTER",
subtitle= "Flipper length and body mass for three penguin species")+
theme_classic() # my personal preference
penguins %>%
ggplot(aes(x=flipper_length_mm,
y = body_mass_g,
colour=species))+
geom_point()+
geom_smooth(method="lm",
se=FALSE)+
labs(x = "Flipper length (mm)",
y = "Body mass (g)",
title= "Penguin Size, Palmer Station LTER",
subtitle= "Flipper length and body mass for three penguin species")+
theme_minimal()
penguins %>%
ggplot(aes(x=flipper_length_mm,
y = body_mass_g,
colour=species))+
geom_point()+
geom_smooth(method="lm",
se=FALSE)+
labs(x = "Flipper length (mm)",
y = "Body mass (g)",
title= "Penguin Size, Palmer Station LTER",
subtitle= "Flipper length and body mass for three penguin species")+
theme_void()
# GEOMS
## geom point
ggplot(data = penguins, aes(x = species, y = culmen_length_mm)) +
geom_point(aes(color = species),
alpha = 0.7,
show.legend = FALSE)
# jitter
ggplot(data = penguins, aes(x = species, y = culmen_length_mm)) +
geom_jitter(aes(color = species),
width = 0.1, # specifies the width, change this to change the range of scatter
alpha = 0.7, # specifies the amount of transparency in the points
show.legend = FALSE) # don't leave a legend in a plot, if it doesn't add value
# boxplot
ggplot(data = penguins,aes(x = species, y = culmen_length_mm)) +
geom_boxplot(aes(fill = species),
alpha = 0.7,
width = 0.5, # change width of boxplot
show.legend = FALSE)
# boxplot with jitter
ggplot(data = penguins,aes(x = species, y = culmen_length_mm)) +
geom_boxplot(aes(fill = species), # note fill is "inside" colour and colour is "edges" - try it for yourself
alpha = 0.2, # fainter boxes so the points "pop"
width = 0.5, # change width of boxplot
outlier.shape=NA)+
geom_jitter(aes(colour = species),
width=0.2)+
theme(legend.position = "none")
##Density and histograms ----
penguins %>%
ggplot(aes(x=culmen_length_mm, fill=species),
position = "identity")+
geom_histogram(bins=50) #  struggle to see/understand the difference between the 2 charts.
penguins %>%
ggplot(aes(x=culmen_length_mm, fill=species))+
geom_histogram(bins=50,
aes(y=..density..),
position = "identity") # the 'relative density' within each bin.
# Results = far fewer Adelie penguins in our dataset, but in a density histogram they occupy the same area of the graph as the other two species
#__________________________----
# ADDING COLORS----
penguins %>%
ggplot(aes(x=flipper_length_mm)) +
geom_histogram(bins=50,
aes(y=..density..,
fill=species),
position = "identity",
colour="black") + # add black boarder to bars
theme_classic() +
labs(x = "Flipper Length (mm)",
title= "Flipper Length Distribution among Penguin Species",
subtitle= "A comparative analysis of flipper lengths in Adelie, Chinstrap, and Gentoo penguins at Palmer Station LTER")
# OUTPUT FIGURE TO FILE
ggsave("outputs/2025_02_08_penguin_plot.png", dpi=400)
## Custom colors ----
# for more colour options, look on Canva colours for codes
penguin_colours <-c("darkolivegreen4", "darkorchid3", "goldenrod1")
penguins %>%
ggplot(aes(x=flipper_length_mm,
y = body_mass_g))+
geom_point(aes(colour=species))+
scale_color_manual(values=penguin_colours)+
theme_minimal()
penguins %>%
ggplot(aes(x=flipper_length_mm,
y = body_mass_g))+
geom_point(aes(colour=species))+
scale_color_brewer(palette="Set1")+
theme_minimal()
## Check accessibility for colour blindness ----
library(colorBlindness)
colorBlindness::cvdPlot() # will automatically run on the last plot you made
## multiple plots = Facetting ----
penguins %>%
drop_na(sex) %>%
ggplot(aes(x=flipper_length_mm,
y = body_mass_g,
colour=species))+
geom_point()+
geom_smooth(method="lm",
se=FALSE)+
facet_wrap(~sex)+
theme_classic()
## Patchwork ----
library(patchwork) # patching multiple plots on 1 screen
p1 <- penguins %>%
ggplot(aes(x=flipper_length_mm,
y = culmen_length_mm))+
geom_point(aes(colour=species))+
scale_color_manual(values=penguin_colours)+
theme_minimal()
p2 <- penguins %>%
ggplot(aes(x=culmen_depth_mm,
y = culmen_length_mm))+
geom_point(aes(colour=species))+
scale_color_manual(values=penguin_colours)+
theme_minimal()
p3 <- penguins %>%
group_by(sex,species) %>%
summarise(n=n()) %>%
drop_na(sex) %>%
ggplot(aes(x=species, y=n)) +
geom_col(aes(fill=sex),
width=0.8,
position=position_dodge(width=0.9),
alpha=0.6)+
scale_fill_manual(values=c("darkorange1", "azure4"))+
theme_classic()
(p1+p2)/p3+
plot_layout(guides = "collect")
# Relpicate violin plot
pal <-c("darkorange1", "darkorchid3", "turquoise4")
penguins %>%
ggplot(aes(x = species,
y = body_mass_g,
fill = species,
colour = species))+
geom_violin(alpha = 0.2)+
geom_boxplot(width = 0.2,
alpha = 0.5)+
scale_fill_manual(values = pal)+
scale_colour_manual(values = pal)+
theme_classic()+
theme(legend.position = "none")+
labs(
x = "",
y = "Body mass (g)",
title = "Body mass of brush-tailed penguins",
subtitle = "Box and violin plot of body mass by species")
# Reference ----
RStudio.Version() # Current version of R in my workspace
citation() # Citing R
citation("tidyverse", "readr", "janitor", "lubridate", "skimr", "colorBlindness", "patchwork") # Citing packages
# 7 DATA QUALITY ----
glimpse(penguins)
summary(penguins)
# missing data
penguins_listwise <- drop_na(penguins)
penguins_listwise
penguins_listwise2 <- drop_na(penguins, -delta_15n, -delta_13c, -comments)
penguins_listwise2
# pairwise deletion
# Correlation between bill_length_mm and flipper_length_mm
cor.test(penguins$body_mass_g, penguins$delta_15n)
# Correlation between bill_length_mm and body_mass_g
cor.test(penguins$body_mass_g, penguins$delta_13c)
# summarising data with NAs
penguins %>%
group_by(species) %>%
summarise(mean = mean(body_mass_g))
# summarising data with NAs
penguins %>%
group_by(species) %>%
summarise(mean = mean(body_mass_g, na.rm = T))
penguins %>%
group_by(species) %>%
summarise(count_na = is.na(body_mass_g) %>% sum())
# Implausible values
penguins %>% distinct(sex)
penguins %>% distinct(species)
penguins %>%
dplyr::select(sex, species, region, island) %>%
distinct()
penguins %>%
summarise_at(c("body_mass_g", "flipper_length_mm"),
c(max = max, min = min),
na.rm = TRUE)
penguins %>%
ggplot()+
geom_histogram(aes(x=body_mass_g),
bins=10)
penguins %>%
ggplot(aes(x=body_mass_g, y = 0))+
geom_boxplot()+
geom_jitter(height =.2)
# substitute values
penguins_imputed <- penguins %>%
group_by(species, sex) %>%
mutate(body_mass_g = replace_na(body_mass_g, mean(body_mass_g, na.rm = T))) %>%
ungroup()
prob_obs_species <- penguins %>%
group_by(species) %>%
summarise(n = n()) %>%
mutate(prob_obs = n/sum(n))
prob_obs_species
penguins %>%
ggplot()+
geom_bar(aes(x=species))
penguins %>%
mutate(species=factor(species, levels=c("Adelie",
"Gentoo",
"Chinstrap"))) %>%
# set as factor and provide levels
ggplot()+
geom_bar(aes(x=species),
fill="steelblue",
width=0.8)+
labs(x="Species",
y = "Number of observations")+
geom_text(data=prob_obs_species,
aes(y=(n+10),
x=species,
label=scales::percent(prob_obs)))+
coord_flip()+ # flip bars to horizontal
theme_minimal()
penguins %>%
mutate(species=factor(species, levels=c("Adelie",
"Gentoo",
"Chinstrap"))) %>%
# set as factor and provide levels
ggplot(prob_obs_species) +
geom_bar(aes(x = species, fill = species), width = 0.8) +
scale_fill_manual(values = c("#6699FF", "#B266B2", "#66B266")) +
labs(x = "Species",
y = "Number of observations") +
geom_text(aes(y = (n + 10), x = species, label = scales::percent(prob_obs))) +
coord_flip() + # flip bars to horizontal
theme_classic()
# Set species as a factor and provide levels
penguins <- penguins %>%
mutate(species = factor(species, levels = c("Adelie", "Gentoo", "Chinstrap")))
# Plot
ggplot(prob_obs_species) +
geom_bar(aes(x = species, fill = species), stat = "identity", width = 0.8) +
scale_fill_manual(values = c("#6699FF", "#B266B2", "#66B266")) +
labs(x = "Species",
y = "Number of observations") +
geom_text(aes(y = (n + 10), x = species, label = scales::percent(prob_obs))) +
coord_flip() + # flip bars to horizontal
theme_classic()
prob_obs_species # 44% of our sample is made up of observations from Adelie penguins, Chinstrap penguins make up less than 20%.
# Plot
ggplot(prob_obs_species) +
geom_bar(aes(x = species, y = prob_obs, fill = species), stat = "identity", width = 0.8) +
scale_fill_manual(values = c("#6699FF", "#B266B2", "#66B266")) +
labs(x = "Species",
y = "Number of observations") +
geom_text(aes(y = (n + 10), x = species, label = scales::percent(prob_obs))) +
coord_flip() + # flip bars to horizontal
theme_classic()
penguins %>%
group_by(species, sex) %>%
summarise(n = n()) %>%
mutate(prob_obs = n/sum(n))
# Central tendency
penguin_body_mass_summary <- penguins %>%
summarise(mean_body_mass=mean(body_mass_g, na.rm=T),
sd = sd(body_mass_g, na.rm = T),
median_body_mass=median(body_mass_g, na.rm=T),
iqr = IQR(body_mass_g, na.rm = T))
penguin_body_mass_summary
penguins %>%
ggplot()+
geom_histogram(aes(x=body_mass_g),
alpha=0.8,
bins = 10,
fill="steelblue",
colour="darkgrey")+
geom_vline(data=penguin_body_mass_summary,
aes(xintercept=mean_body_mass),
colour="red",
linetype="dashed")+
geom_vline(data=penguin_body_mass_summary,
aes(xintercept=median_body_mass),
colour="black",
linetype="dashed")+
labs(x = "Body mass (g)",
y = "Count")+
theme_classic()
penguins %>%
ggplot()+
geom_histogram(aes(x=body_mass_g),
alpha=0.8,
bins = 10,
fill="#66B266",
colour="black")+
geom_vline(data=penguin_body_mass_summary,
aes(xintercept=mean_body_mass),
colour="red",
linetype="dashed")+
geom_vline(data=penguin_body_mass_summary,
aes(xintercept=median_body_mass),
colour="black",
linetype="dashed")+
labs(x = "Body mass (g)",
y = "Count")+
theme_classic()
norm_mass <- rnorm(n = 344,
mean = 4201.754,
sd = 801.9545) %>%
as_tibble()
norm_mass %>%
as_tibble() %>%
ggplot()+
geom_histogram(aes(x = value),
bins = 10)
# QQ PLOTS
ggplot(penguins, aes(sample = body_mass_g))+
stat_qq() +
stat_qq_line()
penguins %>%
pull(body_mass_g) %>%
car::qqPlot()
penguins %>%
pull(body_mass_g) %>%
car::qqPlot()
# Interquartile range
penguins %>%
summarise(q_body_mass = quantile(body_mass_g, c(0.25, 0.5, 0.75), na.rm=TRUE),
quantile = scales::percent(c(0.25, 0.5, 0.75))) # scales package allows easy converting from data values to perceptual properties
# Standard Deviation
penguins %>%
summarise(mean = mean(body_mass_g, na.rm = T),
sd = sd(body_mass_g, na.rm = T),
n = n())
plot_3 <- penguin_body_mass_summary %>%
ggplot(aes(x = " ",
y = mean_body_mass))+
geom_bar(stat = "identity",
fill = colour_fill,
colour = colour_line,
width = 0.2)+
geom_errorbar(data = penguin_body_mass_summary,
aes(ymin = mean_body_mass - sd,
ymax = mean_body_mass + sd),
colour = colour_line,
width = 0.1)+
labs(x = " ",
y = "Body mass (g)")+
scale_y_continuous(limits = lims)+
theme_classic()
# visulise
colour_fill <- "darkorange"
colour_line <- "steelblue"
lims <- c(0,7000)
body_weight_plot <- function(){
penguins %>%
ggplot(aes(x="",
y= body_mass_g))+
labs(x= " ",
y = "Mass (g)")+
scale_y_continuous(limits = lims)+
theme_minimal()
}
plot_1 <- body_weight_plot()+
geom_jitter(fill = colour_fill,
colour = colour_line,
width = 0.2,
shape = 21)
plot_2 <- body_weight_plot()+
geom_boxplot(fill = colour_fill,
colour = colour_line,
width = 0.4)
plot_3 <- penguin_body_mass_summary %>%
ggplot(aes(x = " ",
y = mean_body_mass))+
geom_bar(stat = "identity",
fill = colour_fill,
colour = colour_line,
width = 0.2)+
geom_errorbar(data = penguin_body_mass_summary,
aes(ymin = mean_body_mass - sd,
ymax = mean_body_mass + sd),
colour = colour_line,
width = 0.1)+
labs(x = " ",
y = "Body mass (g)")+
scale_y_continuous(limits = lims)+
theme_classic()
#library(patchwork)
plot_1 + plot_2 + plot_3
